#!/usr/bin/env python3

import os
import requests

from pprint import pprint

from datetime import datetime
import multiprocessing as mp

from db.db import cves, getCVEIDs

PROCESS_COUNT = 8
OTX_KEY = os.getenv("OTX_KEY")

def getAlienVaultCVEInfo(cve):
    url = f"https://otx.alienvault.com/api/v1/indicators/cve/{cve}/general"
    headers = {"X-OTX-API-KEY": OTX_KEY, "Content-Type": "application/json"}

    try:
        res = requests.get(url, headers=headers).json()
    except Exception as e:
        print(f"Error when fetching: {cve}")
        pprint(e)
        res = ""

    # pprint(f"CVE:{cve}")
    # pprint(res)

    # Add info to database.
    # cves.update_one({"_id": cve}, {"$set": {"alienvault": res}})

    return False

def main():
    cveIDList = getCVEIDs()
    cveIDList.sort()

    startIndex = 0
    # endIndex = len(cveIDList)
    endIndex = 4

    startTime = datetime.now()
    print(f"{str(startTime)} | Fetching data from AlienVault. Starting from {cveIDList[startIndex]}...")

    with mp.Pool(PROCESS_COUNT) as p:
        p.map(getAlienVaultCVEInfo, cveIDList[startIndex:endIndex])

    endTime = datetime.now()
    print(f"{str(endTime)} | Fetching data from AlienVault has finished.")
    print(f"Elapsed time: {str(endTime - startTime)}")


if __name__ == "__main__":
    main()
